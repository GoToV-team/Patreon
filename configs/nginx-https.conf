map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}


server {
    listen 80;
    server_name api2.pyaterochka-team.site;
    access_log /var/log/nginx/pyaterochka-access.log;
    error_log /var/log/nginx/pyaterochka-error.log;
    client_max_body_size 1000M;

    return 301 https://$server_name$request_uri; # редирект обычных запросов на https
}

server {
    listen 443 ssl http2;
    server_name api.pyaterochka-team.site;
    access_log /var/log/nginx/pyaterochka-access-ssl-access.log;
    error_log /var/log/nginx/pyaterochka-access-ssl-error.log;

    client_max_body_size 1000M;

    ssl_certificate /etc/letsencrypt/live/api.pyaterochka-team.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.pyaterochka-team.site/privkey.pem;
    ssl_session_timeout 5m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:AES:CAMELLIA:DES-CBC3-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!aECDH:!EDH-DSS-DES-CBC3-SHA:!EDH-RSA-DES-CBC3-SHA:!KRB5-DES-CBC3-SHA';
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;

    location /.well-known/acme-challenge/ {
	    root /web/sites/api.pyaterochka-team.site/www/;
    }

    location /api/v1/ {
        proxy_pass http://main:8080/api/v1/;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Real-IP $remote_addr;
    }

    location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
    }

    location /grafana/api/live {
        rewrite  ^/(.*)  /$1 break;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_set_header Host $http_host;
        proxy_pass http://grafana:3000/;
    }


    location /prometheus {
            proxy_pass http://prometheus:9090/prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
    }
}